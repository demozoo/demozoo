# Generated by Django 5.0.8 on 2024-08-17 13:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('awards', '0001_initial'), ('awards', '0002_recommendation'), ('awards', '0003_set_category_ordering'), ('awards', '0004_event_slug'), ('awards', '0005_event_intro'), ('awards', '0006_jurors'), ('awards', '0007_event_production_types'), ('awards', '0008_category_platforms_category_slug'), ('awards', '0009_event_show_recommendation_counts'), ('awards', '0010_nomination'), ('awards', '0011_eventseries_event_series')]

    initial = True

    dependencies = [
        ('platforms', '0004_py3_strings'),
        ('productions', '0017_remove_ansi'),
        ('productions', '0023_emulator_config_choices'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('eligibility_start_date', models.DateField(help_text='Earliest release date a production can have to be considered for these awards')),
                ('eligibility_end_date', models.DateField(help_text='Latest release date a production can have to be considered for these awards')),
                ('recommendations_enabled', models.BooleanField(default=False, help_text='Whether these awards are currently accepting recommendations')),
                ('reporting_enabled', models.BooleanField(default=False, help_text='Whether jurors can currently view reports for these awards')),
                ('slug', models.SlugField(default='meteoriks-2020', help_text='Used in URLs - /awards/[slug]/', max_length=255, unique=True)),
                ('intro', models.TextField(blank=True, help_text="Intro text to show on 'your recommendations' page - Markdown / HTML supported")),
                ('juror_feed_url', models.URLField(blank=True, help_text='URL to a list of juror SceneIDs', max_length=255)),
                ('production_types', models.ManyToManyField(blank=True, help_text='If set, these awards only accept recommendations for productions of these types', to='productions.productiontype')),
                ('show_recommendation_counts', models.BooleanField(default=False, help_text='If true, reports will show how many times a production has been recommended')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='awards.event')),
                ('position', models.IntegerField(blank=True, null=True)),
                ('platforms', models.ManyToManyField(blank=True, help_text='If set, the candidates listing is filtered by these platforms', to='platforms.platform')),
                ('slug', models.SlugField(blank=True, help_text='If set, enables a candidates listing page at /awards/[slug]/[category]/', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='awards.category')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='award_recommendations', to='productions.production')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='award_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'production', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Juror',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sticky', models.BooleanField(default=False, help_text='If set, this juror will not be removed in the event that they are absent from the feed of jury members')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jurors', to='awards.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='juror_appointments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nominee', 'Nominee'), ('winner', 'Winner')], default='nominee', max_length=32)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominations', to='awards.category')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='award_nominations', to='productions.production')),
            ],
            options={
                'unique_together': {('production', 'category')},
            },
        ),
        migrations.CreateModel(
            name='EventSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'event series',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='awards.eventseries'),
        ),
    ]
