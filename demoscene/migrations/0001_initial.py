# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-02-20 19:24
from __future__ import unicode_literals

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import lib.prefetch_snooping


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demozoo0_id', models.IntegerField(blank=True, null=True, verbose_name=b'Demozoo v0 ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='CaptchaQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text=b'HTML is allowed. Keep questions factual and simple - remember that our potential users are not always followers of mainstream demoparty culture')),
                ('answer', models.CharField(help_text=b'Answers are not case sensitive (the correct answer will be accepted regardless of capitalisation)', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Edit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=100)),
                ('focus_object_id', models.PositiveIntegerField()),
                ('focus2_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin_only', models.BooleanField(default=False)),
                ('focus2_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edits_as_focus2', to='contenttypes.ContentType')),
                ('focus_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edits', to='contenttypes.ContentType')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField(default=True)),
                ('data_source', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(blank=True, help_text=b"(optional - only if there's one that's actively being used. Don't just make one up!)", max_length=255)),
                ('differentiator', models.CharField(blank=True, help_text=b'hint text to distinguish from other groups/sceners with the same name - e.g. platform or country', max_length=32)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NickVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nick', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='demoscene.Nick')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Releaser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_group', models.BooleanField(db_index=True)),
                ('notes', models.TextField(blank=True)),
                ('demozoo0_id', models.IntegerField(blank=True, null=True, verbose_name=b'Demozoo v0 ID')),
                ('location', models.CharField(blank=True, max_length=255)),
                ('country_code', models.CharField(blank=True, max_length=5)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('woe_id', models.BigIntegerField(blank=True, null=True)),
                ('geonames_id', models.BigIntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('show_first_name', models.BooleanField(default=True)),
                ('surname', models.CharField(blank=True, max_length=255)),
                ('show_surname', models.BooleanField(default=True)),
                ('real_name_note', models.TextField(blank=True, default=b'', help_text=b'Details of any correspondence / decision about whether this name should be public', verbose_name=b'Permission note')),
                ('data_source', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('view_releaser_real_names', 'Can view non-public real names'),),
            },
            bases=(models.Model, lib.prefetch_snooping.ModelWithPrefetchSnooping),
        ),
        migrations.CreateModel(
            name='ReleaserExternalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_class', models.CharField(max_length=100)),
                ('parameter', models.CharField(max_length=255)),
                ('releaser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_links', to='demoscene.Releaser')),
            ],
            options={
                'ordering': ['link_class'],
            },
        ),
        migrations.CreateModel(
            name='SceneID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sceneid', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagDescription',
            fields=[
                ('tag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='description', serialize=False, to='taggit.Tag')),
                ('description', models.TextField(help_text=b"HTML is allowed. Keep this to a couple of sentences at most - it's used in tooltips as well as the tag listing page")),
            ],
        ),
        migrations.AddField(
            model_name='nick',
            name='releaser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nicks', to='demoscene.Releaser'),
        ),
        migrations.AddField(
            model_name='membership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_memberships', to='demoscene.Releaser'),
        ),
        migrations.AddField(
            model_name='membership',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='demoscene.Releaser'),
        ),
        migrations.AlterUniqueTogether(
            name='releaserexternallink',
            unique_together=set([('link_class', 'parameter', 'releaser')]),
        ),
        migrations.AlterUniqueTogether(
            name='nick',
            unique_together=set([('releaser', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='edit',
            index_together=set([('focus2_content_type', 'focus2_object_id'), ('focus_content_type', 'focus_object_id')]),
        ),
    ]
